name: Node.js CI
# on: push
on:
  push:
    branches: [171-compile-先执行-test-单元测试并生成-coverage-用于-readme-显示-badge]
  pull_request:
    branches: [171-compile-先执行-test-单元测试并生成-coverage-用于-readme-显示-badge]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm run test
        env:
          NODE_ENV: development
          name: Get Coverage for badge
          run: |
            # var SUMMARY = [
            #   '',
            #   '=============================== Coverage summary ===============================',
            #   'Statements   : 32.5% ( 39/120 )',
            #   'Branches     : 38.89% ( 21/54 )',
            #   'Functions    : 21.74% ( 5/23 )',
            #   'Lines        : 31.93% ( 38/119 )',
            #   '================================================================================',
            #   ''
            # ];
            # SUMMARY = SUMMARY.split('\n')[5]; // 'Lines        : 31.93% ( 38/119 )'
            # SUMMARY = SUMMARY.split(':')[1].split('(')[0].trim(); // '31.93%'
            SUMMARY="$(pnpm run test)"
            TOKENS=($SUMMARY)
            # process.env.COVERAGE = '31.93%';
            echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

            # var REF = 'refs/pull/27/merge.json';
            REF=${{ github.ref }}
            # console.log('github.ref: ' + REF);
            echo "github.ref: $REF"
            # var PATHS = REF.split('/');
            IFS='/' read -ra PATHS <<< "$REF"
            # var BRANCH_NAME = PATHS[1] + '_' + PATHS[2];
            BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
            # console.log(BRANCH_NAME); // 'pull_27'
            echo $BRANCH_NAME
            # process.env.BRANCH = 'pull_27';
            echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 5c4881f21bab2cf4f09a8658354fb997
          filename: raopics-coverage.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: vitest
