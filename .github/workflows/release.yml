name: Build/Release
on:
  push:
    branches:
      - turbo-electron-prisma
jobs:
  install:
    name: Install
    if: contains(github.event.head_commit.message, '[release]')
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Release for linux-openssl-1.1.x
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd apps/electron
          ls ./
          pnpm release:linux-openssl-1.1.x
        env:
          USE_HARD_LINKS: false

      - name: Release for linux-openssl-3.0.x
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd apps/electron
          ls ./
          pnpm release:linux-openssl-3.0.x
        env:
          USE_HARD_LINKS: false

      - name: Upload releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            apps/electron/dist/linux-*/*.deb
          draft: true
